server {
    server_name anthropic;
    listen %s;

    default_type 'application/json';


    location = "/llm/v1/chat/good" {
      content_by_lua_block {
        local pl_file = require "pl.file"
        local json = require("cjson.safe")

        local token = ngx.req.get_headers()["x-api-key"]
        if token == "anthropic-key" then
          ngx.req.read_body()
          local body, err = ngx.req.get_body_data()
          body, err = json.decode(body)

          if err or (not body.messages) then
            ngx.status = 400
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/bad_request.json"))
          else
            ngx.status = 200
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/good.json"))
          end
        else
          ngx.status = 401
          ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/unauthorized.json"))
        end
      }
    }

    location = "/llm/v1/chat/bad_upstream_response" {
      content_by_lua_block {
        local pl_file = require "pl.file"
        local json = require("cjson.safe")

        local token = ngx.req.get_headers()["x-api-key"]
        if token == "anthropic-key" then
          ngx.req.read_body()
          local body, err = ngx.req.get_body_data()
          body, err = json.decode(body)

          if err or (not body.messages) then
            ngx.status = 400
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/bad_request.json"))
          else
            ngx.status = 200
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/bad_upstream_response.json"))
          end
        else
          ngx.status = 401
          ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/unauthorized.json"))
        end
      }
    }

    location = "/llm/v1/chat/no_usage_upstream_response" {
      content_by_lua_block {
        local pl_file = require "pl.file"
        local json = require("cjson.safe")

        local token = ngx.req.get_headers()["x-api-key"]
        if token == "anthropic-key" then
          ngx.req.read_body()
          local body, err = ngx.req.get_body_data()
          body, err = json.decode(body)

          if err or (not body.messages) then
            ngx.status = 400
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/bad_request.json"))
          else
            ngx.status = 200
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/no_usage_response.json"))
          end
        else
          ngx.status = 401
          ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/unauthorized.json"))
        end
      }
    }

    location = "/llm/v1/chat/malformed_usage_upstream_response" {
      content_by_lua_block {
        local pl_file = require "pl.file"
        local json = require("cjson.safe")

        local token = ngx.req.get_headers()["x-api-key"]
        if token == "anthropic-key" then
          ngx.req.read_body()
          local body, err = ngx.req.get_body_data()
          body, err = json.decode(body)

          if err or (not body.messages) then
            ngx.status = 400
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/bad_request.json"))
          else
            ngx.status = 200
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/malformed_usage_response.json"))
          end
        else
          ngx.status = 401
          ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/unauthorized.json"))
        end
      }
    }

    location = "/llm/v1/chat/bad_request" {
      content_by_lua_block {
        local pl_file = require "pl.file"

        ngx.status = 400
        ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/bad_request.json"))
      }
    }

    location = "/llm/v1/chat/internal_server_error" {
      content_by_lua_block {
        local pl_file = require "pl.file"

        ngx.status = 500
        ngx.header["content-type"] = "text/html"
        ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-chat/responses/internal_server_error.html"))
      }
    }


    location = "/llm/v1/completions/good" {
      content_by_lua_block {
        local pl_file = require "pl.file"
        local json = require("cjson.safe")

        local token = ngx.req.get_headers()["x-api-key"]
        if token == "anthropic-key" then
          ngx.req.read_body()
          local body, err = ngx.req.get_body_data()
          body, err = json.decode(body)

          if err or (not body.prompt) then
            ngx.status = 400
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-completions/responses/bad_request.json"))
          else
            ngx.status = 200
            ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-completions/responses/good.json"))
          end
        else
          ngx.status = 401
          ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-completions/responses/unauthorized.json"))
        end
      }
    }

    location = "/llm/v1/completions/bad_request" {
      content_by_lua_block {
        local pl_file = require "pl.file"

        ngx.status = 400
        ngx.print(pl_file.read("spec/fixtures/ai-proxy/anthropic/llm-v1-completions/responses/bad_request.json"))
      }
    }

}

name: Performance Test

on:
  pull_request:
  issue_comment:
  schedule:
  # don't know the timezone but it's daily at least
  - cron:  '0 7 * * *'

jobs:
  perf:
    name: RPS, latency and flamegraphs
    runs-on: ubuntu-20.04
    if: |
      github.event_name == 'schedule' ||
      (github.event_name == 'pull_request' && startsWith(github.event.pull_request.title, 'perf(')) ||
      (github.event_name == 'issue_comment' && github.event.action == 'created' &&
        github.event.issue.pull_request &&
        (startsWith(github.event.comment.body, '/perf') ||startsWith(github.event.comment.body, '/flamegraph'))
      )

    steps:
    - name: Checkout Kong source code
      uses: actions/checkout@v2
      # Fetch all history for all tags and branches
      with:
        fetch-depth: 0
    
    - name: Install OpenResty
      run: |
        sudo apt-get -y install --no-install-recommends wget gnupg ca-certificates
        wget -O - https://openresty.org/package/pubkey.gpg | sudo apt-key add -
        echo "deb http://openresty.org/package/ubuntu $(lsb_release -sc) main" | \
          sudo tee /etc/apt/sources.list.d/openresty.list
        sudo apt-get update
        sudo apt install openresty

    - name: Install Dependencies
      run: |
        wget https://luarocks.org/releases/luarocks-3.7.0.tar.gz -O - |tar zxvf -
        pushd luarocks-*/
        ./configure --with-lua=/usr/local/openresty/luajit/ \
          --lua-suffix=jit \
          --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1
        sudo make install
        popd

        # just need the lua files to let all imports happy
        # the CI won't actually run Kong locally
        git clone https://github.com/kong/lua-kong-nginx-module /tmp/lua-kong-nginx-module
        pushd /tmp/lua-kong-nginx-module
        sudo make LUA_LIB_DIR=/usr/local/share/lua/5.1/ install
        popd

        # in Kong repository
        sudo apt install libyaml-dev -y
        sudo make dev

    - name: Choose perf suites
      id: choose_perf
      run: |
        suite=$(echo "${{ github.event.comment.body }}" | awk '{print $1}')
        tags=$(echo "${{ github.event.comment.body }}" | awk '{print $2}')

        if [[ $suite == "/flamegraph" ]]; then
          suite="02-flamegraph"
          if [[ -z $tags ]]; then
            tags="single_route"
          fi
        else
          suite="01-rps"
          if [[ -z $tags ]]; then
            tags="baseline,single_route"
          fi
        fi
        echo ::set-output name=suite::"$suite"
        echo ::set-output name=tags::"$tags"

    - name: Run Tests
      env:
        PERF_TEST_VERSIONS: git:${{ github.sha }},git:master
      run: |
        bin/busted -o gtest spec/04-perf/${{ steps.choose_perf.outputs.suite }}/ \
          -t "${{ steps.choose_perf.outputs.tags }}"

    - name: Save results
      uses: actions/upload-artifact@v2
      with:
        name: rps-and-latency
        path: |
          output/result.txt
        retention-days: 31

    - name: Save flamegrpahs
      uses: actions/upload-artifact@v2
      with:
        name: flamegraphs
        path: |
          output/*.svg
        retention-days: 31

    - name: Output
      id: output
      run: |
        if [[ "${{ steps.choose_perf.outputs.suite }}" == "02-flamegraph" ]]; then
          result="Please see Github Actions artifacts for flamegraphs"
        else
          result=$(cat output/result.txt)
        fi

        # https://github.community/t/set-output-truncates-multiline-strings/16852/2
        result="${result//'%'/'%25'}"
        result="${result//$'\n'/'%0A'}"
        result="${result//$'\r'/'%0D'}"

        echo ::set-output name=result::"$result"
    
    - name: Comment
      if: |
        github.event_name == 'pull_request' ||
        (github.event_name == 'issue_comment' && github.event.issue.pull_request)
      uses: actions-ecosystem/action-create-comment@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ## :rocket: Performance test result

          **Test Suite**: ${{ steps.choose_perf.outputs.suite }} (${{ steps.choose_perf.outputs.tags }})

          <details><summary>Click to expand</summary>

          ```
          ${{ steps.output.outputs.result }}
          ```

          </details>

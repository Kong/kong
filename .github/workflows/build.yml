name: Build
on:
  workflow_call:
    inputs:
      relative-build-root:
        required: true
        type: string

env:
  BUILD_ROOT: ${{ github.workspace }}/${{ inputs.relative-build-root }}

jobs:
  build:
    name: Build dependencies
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Kong source code
      uses: actions/checkout@v3

    - name: Set ngx_wasm_module path/branch vars
      run: |
        grep ^NGX_WASM_MODULE_BRANCH= .requirements >> $GITHUB_ENV || {
          echo "ERROR: NGX_WASM_MODULE_BRANCH is not defined in .requirements"
          exit 1
        }
        echo "NGX_WASM_MODULE_REMOTE=$PWD/ngx_wasm_module" >> $GITHUB_ENV

    - name: Checkout ngx_wasm_module
      uses: actions/checkout@v3
      with:
        repository: Kong/ngx_wasm_module
        path: ${{ env.NGX_WASM_MODULE_REMOTE }}
        ref: ${{ env.NGX_WASM_MODULE_BRANCH }}
        token: ${{ secrets.GHA_KONG_BOT_READ_TOKEN }}

    - name: Lookup build cache
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.BUILD_ROOT }}
        key: ${{ hashFiles('.requirements', 'kong-*.rockspec', '.bazelversion', '.bazelrc', 'build/**', 'BUILD.bazel', 'WORKSPACE', '.github/workflows/build_and_test.yml') }}

    - name: Install packages
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: sudo apt update && sudo apt install libyaml-dev valgrind libprotobuf-dev

    - name: Build Kong
      if: steps.cache-deps.outputs.cache-hit != 'true'
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        make build-kong
        chmod +rw -R "$BUILD_ROOT/kong-dev"

    - name: Update PATH
      run: |
        echo "$BUILD_ROOT/kong-dev/bin" >> $GITHUB_PATH
        echo "$BUILD_ROOT/kong-dev/openresty/nginx/sbin" >> $GITHUB_PATH
        echo "$BUILD_ROOT/kong-dev/openresty/bin" >> $GITHUB_PATH

    - name: Debug (nginx)
      run: |
        echo nginx: $(which nginx)
        nginx -V 2>&1 | sed -re 's/ --/\n--/g'
        ldd $(which nginx)

    - name: Debug (luarocks)
      run: |
        echo luarocks: $(which luarocks)
        luarocks --version
        luarocks config

    - name: Bazel Outputs
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: bazel-outputs
        path: |
          bazel-out/_tmp/actions
        retention-days: 3

    - name: Build Dev Kong dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        make install-dev-rocks

name: Build & Test
on:
  pull_request:
    paths-ignore:
    # ignore top-level markdown files (CHANGELOG.md, README.md, etc.)
    - '*.md'
  push:
    paths-ignore:
    # ignore top-level markdown files (CHANGELOG.md, README.md, etc.)
    - '*.md'
    branches:
    - master
    - release/*
    - test-please/*

# cancel previous runs if new commits are pushed to the PR, but run for each commit on master
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build dependencies
    runs-on: ubuntu-22.04

    env:
      DOWNLOAD_ROOT: $HOME/download-root

    steps:
    - name: Set environment variables
      run: |
          echo "INSTALL_ROOT=$HOME/install-root" >> $GITHUB_ENV
          echo "DOWNLOAD_ROOT=$HOME/download-root" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$INSTALL_ROOT/openssl/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
    - name: Checkout Kong source code
      uses: actions/checkout@v3

    - name: Lookup build cache
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: ${{ env.INSTALL_ROOT }}
        key: ${{ hashFiles('.ci/setup_env_github.sh') }}-${{ hashFiles('.github/workflows/build_and_test.yml') }}-${{ hashFiles('.requirements') }}-${{ hashFiles('kong-*.rockspec') }}-${{ hashFiles('Makefile') }}

    - name: Checkout kong-build-tools
      if: steps.cache-deps.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: Kong/kong-build-tools
        path: kong-build-tools
        ref: master

    - name: Checkout go-pluginserver
      if: steps.cache-deps.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: Kong/go-pluginserver
        path: go-pluginserver

    - name: Add to Path
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: echo "$INSTALL_ROOT/openssl/bin:$INSTALL_ROOT/openresty/nginx/sbin:$INSTALL_ROOT/openresty/bin:$INSTALL_ROOT/luarocks/bin:$GITHUB_WORKSPACE/kong-build-tools/openresty-build-tools" >> $GITHUB_PATH

    - name: Install packages
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: sudo apt update && sudo apt install libyaml-dev valgrind libprotobuf-dev

    - name: Build Kong dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
          source .ci/setup_env_github.sh
          make dev

  integration-tests-dbless:
    name: DB-less integration tests
    runs-on: ubuntu-22.04
    needs: build

    env:
      KONG_TEST_PG_DATABASE: kong
      KONG_TEST_PG_USER: kong
      KONG_TEST_DATABASE: 'off'
      KONG_SPEC_TEST_GRPCBIN_PORT: "15002"
      KONG_SPEC_TEST_GRPCBIN_SSL_PORT: "15003"
      KONG_SPEC_TEST_OTELCOL_FILE_EXPORTER_PATH: ${{ github.workspace }}/tmp/otel/file_exporter.json
      TEST_SUITE: dbless

    services:
      grpcbin:
        image: moul/grpcbin
        ports:
          - 15002:9000
          - 15003:9001

    steps:
    - name: Set environment variables
      run: |
          echo "INSTALL_ROOT=$HOME/install-root" >> $GITHUB_ENV
          echo "DOWNLOAD_ROOT=$HOME/download-root" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$INSTALL_ROOT/openssl/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

    - name: Checkout Kong source code
      uses: actions/checkout@v3

    - name: Lookup build cache
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: ${{ env.INSTALL_ROOT }}
        key: ${{ hashFiles('.ci/setup_env_github.sh') }}-${{ hashFiles('.github/workflows/build_and_test.yml') }}-${{ hashFiles('.requirements') }}-${{ hashFiles('kong-*.rockspec') }}-${{ hashFiles('Makefile') }}

    - name: Add to Path
      run: echo "$INSTALL_ROOT/openssl/bin:$INSTALL_ROOT/openresty/nginx/sbin:$INSTALL_ROOT/openresty/bin:$INSTALL_ROOT/luarocks/bin:$GITHUB_WORKSPACE/kong-build-tools/openresty-build-tools:$INSTALL_ROOT/go-pluginserver" >> $GITHUB_PATH

    - name: Add gRPC test host names
      run: |
          echo "127.0.0.1 grpcs_1.test" | sudo tee -a /etc/hosts
          echo "127.0.0.1 grpcs_2.test" | sudo tee -a /etc/hosts

    - name: Run OpenTelemetry Collector
      run: |
          mkdir -p ${{ github.workspace }}/tmp/otel
          touch ${{ github.workspace }}/tmp/otel/file_exporter.json
          sudo chmod 777 -R ${{ github.workspace }}/tmp/otel
          docker run -p 4317:4317 -p 4318:4318 -p 55679:55679 \
              -v ${{ github.workspace }}/spec/fixtures/opentelemetry/otelcol.yaml:/etc/otel-collector-config.yaml \
              -v ${{ github.workspace }}/tmp/otel:/etc/otel \
              --name opentelemetry-collector -d \
              otel/opentelemetry-collector-contrib:0.52.0 \
              --config=/etc/otel-collector-config.yaml
          sleep 2
          docker logs opentelemetry-collector

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true

    - name: Tests
      run: |
          eval `luarocks path`
          make dev
          .ci/run_tests.sh

 
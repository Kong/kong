server {
    listen 15557;
    listen 15558 ssl;
    listen 15557 udp;

    ssl_certificate     /Users/antoine.jacquemin@konghq.com/Downloads/kongN/kong/antoine/ssl/kong-default.crt;
    ssl_certificate_key /Users/antoine.jacquemin@konghq.com/Downloads/kongN/kong/antoine/ssl/kong-default.key;
    ssl_certificate     /Users/antoine.jacquemin@konghq.com/Downloads/kongN/kong/antoine/ssl/kong-default-ecdsa.crt;
    ssl_certificate_key /Users/antoine.jacquemin@konghq.com/Downloads/kongN/kong/antoine/ssl/kong-default-ecdsa.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    content_by_lua_block {
        local sock = assert(ngx.req.socket())
        local data = sock:receive()  -- read a line from downstream

        if string.find(data, "get_sni") then
            sock:send(ngx.var.ssl_server_name)
            sock:send("\n")
            return
        end

        if ngx.var.protocol == "TCP" then
            ngx.say(data)

        else
            sock:send(data) -- echo whatever was sent
        end
    }
}

include '*.stream_mock';


paths:
  /:
    get:
      summary: Retrieve node information
  /plugins/enabled:
    get:
      summary: Retrieve Enabled Plugins
  /upstreams/{upstreams}/targets/{targets}/unhealthy:
    post:
      description: This method is not available when using DB-less mode.
      summary: Set target as unhealthy
  /schemas/{db_entity_name}/validate:
    post:
      description: This method is not available when using DB-less mode.
      summary: Validate a configuration against a schema
  /services/{services}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /plugins/schema/{name}:
    get: []
  /schemas/plugins/validate:
    post:
      description: This method is not available when using DB-less mode.
      summary: Validate a plugin configuration against the schema
  /upstreams/{upstreams}/targets:
    post:
      description: This method is not available when using DB-less mode.
    get: []
  /clustering/data-planes: []
  /upstreams/{upstreams}/targets/{targets}:
    get: []
    delete:
      description: This method is not available when using DB-less mode.
      summary: Delete Target
    put:
      description: This method is not available when using DB-less mode.
    patch:
      description: This method is not available when using DB-less mode.
      summary: Update Target
  /plugins:
    post:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/{address}/unhealthy:
    post:
      description: This method is not available when using DB-less mode.
      summary: Set target address as unhealthy
  /certificates/{certificates}/snis: []
  /targets/{targets}: []
  /targets/{targets}/upstream: []
  /cache/{key}:
    get: []
    delete:
      description: This method is not available when using DB-less mode.
  /consumers:
    get: []
  /schemas/plugins/{name}:
    get:
      summary: Retrieve Plugin Schema
  /routes/{routes}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /tags/{tags}:
    get:
      summary: ' List entity IDs by tag '
  /certificates/{certificates}/snis/{snis}: []
  /routes/{routes}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /services/{services}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/health:
    get:
      summary: Show Upstream health for node
  /certificates/{certificates}:
    get: []
    put:
      description: This method is not available when using DB-less mode.
    patch:
      description: This method is not available when using DB-less mode.
  /consumers/{consumers}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /consumers/{consumers}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/healthy:
    post:
      description: This method is not available when using DB-less mode.
      summary: Set target as healthy
  /cache:
    delete:
      description: This method is not available when using DB-less mode.
  /plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:
    post:
      description: This method is not available when using DB-less mode.
      summary: Set target address as healthy
  /schemas/{name}:
    get:
      summary: Retrieve Entity Schema
  /status:
    get:
      summary: Retrieve node status
  /snis/{snis}/certificate: []
  /endpoints:
    get:
      summary: List available endpoints
  /config:
    post:
      description: This method is only available when using DB-less mode.
    get:
      description: This method is only available when using DB-less mode.
  /clustering/status: []
  /targets: []
  /upstreams/{upstreams}/targets/all:
    get:
      summary: List all Targets
servers:
- description: 8001 is the default port on which the Admin API listens.
  url: http://localhost:8001
- description: 8444 is the default port for HTTPS traffic to the Admin API.
  url: https://localhost:8444
openapi: 3.1.0
components:
  schemas:
    consumers:
      properties:
        username:
          type: string
        custom_id:
          type: string
        id:
          type: string
          format: uuid
        tags:
          type: array
        created_at:
          type: integer
          format: int32
      type: object
      required: []
    workspaces:
      properties:
        name:
          type: string
        config:
          type: array
        comment:
          type: string
        id:
          type: string
          format: uuid
        meta:
          type: array
        created_at:
          type: integer
          format: int32
      type: object
      required:
      - name
    certificates:
      properties:
        key:
          type: string
        cert_alt:
          type: string
        id:
          type: string
          format: uuid
        key_alt:
          type: string
        cert:
          type: string
        tags:
          type: array
        created_at:
          type: integer
          format: int32
      type: object
      required:
      - cert
      - key
    ca_certificates:
      properties:
        cert_digest:
          type: string
        id:
          type: string
          format: uuid
        cert:
          type: string
        tags:
          type: array
        created_at:
          type: integer
          format: int32
      type: object
      required:
      - cert
    snis:
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
        certificate:
          $ref: '#/components/schemas/certificates'
        tags:
          type: array
        created_at:
          type: integer
          format: int32
      type: object
      required:
      - name
      - certificate
    upstreams:
      properties:
        hash_on:
          type: string
          default: none
        hash_fallback:
          type: string
          default: none
        id:
          type: string
          format: uuid
        hash_on_header:
          type: string
        client_certificate:
          $ref: '#/components/schemas/certificates'
        hash_fallback_header:
          type: string
        created_at:
          type: integer
          format: int32
        name:
          type: string
        host_header:
          type: string
        hash_on_cookie_path:
          type: string
          default: /
        tags:
          type: array
        slots:
          type: integer
          default: 10000
        healthchecks:
          type: array
          default:
            passive:
              unhealthy:
                http_failures: 0
                tcp_failures: 0
                http_statuses:
                - 429
                - 500
                - 503
                timeouts: 0
              type: http
              healthy:
                http_statuses:
                - 200
                - 201
                - 202
                - 203
                - 204
                - 205
                - 206
                - 207
                - 208
                - 226
                - 300
                - 301
                - 302
                - 303
                - 304
                - 305
                - 306
                - 307
                - 308
                successes: 0
            active:
              http_path: /
              timeout: 1
              https_verify_certificate: true
              concurrency: 10
              healthy:
                successes: 0
                http_statuses:
                - 200
                - 302
                interval: 0
              unhealthy:
                http_failures: 0
                interval: 0
                http_statuses:
                - 429
                - 404
                - 500
                - 501
                - 502
                - 503
                - 504
                - 505
                tcp_failures: 0
                timeouts: 0
              type: http
        algorithm:
          type: string
          default: round-robin
        hash_on_cookie:
          type: string
      type: object
      required:
      - name
    targets:
      properties:
        weight:
          type: integer
          default: 100
        id:
          type: string
          format: uuid
        tags:
          type: array
        upstream:
          $ref: '#/components/schemas/upstreams'
        target:
          type: string
        created_at:
          type: number
          format: float
      type: object
      required:
      - upstream
      - target
    plugins:
      properties:
        config:
          type: array
        service:
          nullable: true
          $ref: '#/components/schemas/services'
          default: ~
        id:
          type: string
          format: uuid
        route:
          nullable: true
          $ref: '#/components/schemas/routes'
          default: ~
        created_at:
          type: integer
          format: int32
        name:
          type: string
        protocols:
          default:
          - grpc
          - grpcs
          - http
          - https
          type: array
          enum:
          - http
          - https
          - tcp
          - tls
          - udp
          - grpc
          - grpcs
        enabled:
          type: boolean
          default: true
        tags:
          type: array
        consumer:
          nullable: true
          $ref: '#/components/schemas/consumers'
          default: ~
      type: object
      required:
      - name
      - protocols
      - enabled
    tags:
      properties:
        entity_name:
          type: string
        entity_id:
          type: string
        tag:
          type: string
      type: object
      required:
      - tag
      - entity_name
      - entity_id
    clustering_data_planes:
      properties:
        config_hash:
          type: string
        hostname:
          type: string
        ip:
          type: string
        id:
          type: string
        version:
          type: string
        sync_status:
          type: string
          default: unknown
        last_seen:
          type: integer
          format: int32
      type: object
      required:
      - id
      - ip
      - hostname
      - sync_status
    parameters:
      properties:
        key:
          type: string
        value:
          type: string
        created_at:
          type: integer
          format: int32
      type: object
      required:
      - key
      - value
    services:
      properties:
        tls_verify_depth:
          nullable: true
          type: integer
          default: ~
        id:
          type: string
          format: uuid
        created_at:
          type: integer
          format: int32
        updated_at:
          type: integer
          format: int32
        protocol:
          type: string
          default: http
        path:
          type: string
        retries:
          type: integer
          default: 5
        connect_timeout:
          type: integer
          default: 60000
        ca_certificates:
          type: array
        write_timeout:
          type: integer
          default: 60000
        host:
          type: string
        read_timeout:
          type: integer
          default: 60000
        port:
          type: integer
          default: 80
        client_certificate:
          $ref: '#/components/schemas/certificates'
        tags:
          type: array
        tls_verify:
          type: boolean
        name:
          type: string
      type: object
      required:
      - protocol
      - host
      - port
    routes:
      properties:
        id:
          type: string
          format: uuid
        snis:
          type: array
        created_at:
          type: integer
          format: int32
        updated_at:
          type: integer
          format: int32
        path_handling:
          type: string
          default: v0
        preserve_host:
          type: boolean
          default: false
        request_buffering:
          type: boolean
          default: true
        response_buffering:
          type: boolean
          default: true
        regex_priority:
          type: integer
          default: 0
        service:
          $ref: '#/components/schemas/services'
        https_redirect_status_code:
          type: integer
          default: 426
        methods:
          type: array
        hosts:
          type: array
        name:
          type: string
        paths:
          type: array
        protocols:
          type: array
          default:
          - http
          - https
        destinations:
          type: array
        headers:
          type: array
        sources:
          type: array
        tags:
          type: array
        strip_path:
          type: boolean
          default: true
      type: object
      required:
      - protocols
      - https_redirect_status_code
      - strip_path
      - preserve_host
      - request_buffering
      - response_buffering
info:
  title: Kong Admin API
  summary: Kong RESTful Admin API for administration purposes.
  description: "       {{site.base_gateway}} comes with an **internal** RESTful Admin
    API for administration purposes.\n        Requests to the Admin API can be sent
    to any node in the cluster, and Kong will\n        keep the configuration consistent
    across all nodes.\n\n        - `8001` is the default port on which the Admin API
    listens.\n        - `8444` is the default port for HTTPS traffic to the Admin
    API.\n\n        This API is designed for internal use and provides full control
    over Kong, so\n        care should be taken when setting up Kong environments
    to avoid undue public\n        exposure of this API. See [this document][secure-admin-api]
    for a discussion\n        of methods to secure the Admin API.\n      "
  version: 2.5.0
  contact:
    name: Kong
    url: https://github.com/Kong/kong
  license:
    name: Apache 2.0
    url: https://github.com/Kong/kong/blob/master/LICENSE

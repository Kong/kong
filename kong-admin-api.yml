servers:
- description: 8001 is the default port on which the Admin API listens.
  url: http://localhost:8001
- description: 8444 is the default port for HTTPS traffic to the Admin API.
  url: http://localhost:8444
components:
  schemas:
    routes:
      required:
      - protocols
      - https_redirect_status_code
      - strip_path
      - preserve_host
      - request_buffering
      - response_buffering
      type: object
      properties:
        headers:
          type: array
        name:
          type: string
        id:
          format: uuid
          type: string
        tags:
          type: array
        strip_path:
          default: true
          type: boolean
        destinations:
          type: array
        path_handling:
          default: v0
          type: string
        hosts:
          type: array
        methods:
          type: array
        request_buffering:
          default: true
          type: boolean
        updated_at:
          format: int32
          type: integer
        response_buffering:
          default: true
          type: boolean
        sources:
          type: array
        service:
          $ref: '#/components/schemas/services'
        snis:
          type: array
        https_redirect_status_code:
          default: 426
          type: integer
        created_at:
          format: int32
          type: integer
        preserve_host:
          default: false
          type: boolean
        protocols:
          default:
          - http
          - https
          type: array
        regex_priority:
          default: 0
          type: integer
        paths:
          type: array
    consumers:
      required: []
      type: object
      properties:
        custom_id:
          type: string
        id:
          format: uuid
          type: string
        created_at:
          format: int32
          type: integer
        username:
          type: string
        tags:
          type: array
    plugins:
      required:
      - name
      - protocols
      - enabled
      type: object
      properties:
        name:
          type: string
        created_at:
          format: int32
          type: integer
        protocols:
          default:
          - grpc
          - grpcs
          - http
          - https
          type: array
          enum:
          - http
          - https
          - tcp
          - tls
          - udp
          - grpc
          - grpcs
        service:
          default: ~
          nullable: true
          $ref: '#/components/schemas/services'
        enabled:
          default: true
          type: boolean
        id:
          format: uuid
          type: string
        route:
          default: ~
          nullable: true
          $ref: '#/components/schemas/routes'
        tags:
          type: array
        consumer:
          default: ~
          nullable: true
          $ref: '#/components/schemas/consumers'
        config:
          type: array
    certificates:
      required:
      - cert
      - key
      type: object
      properties:
        cert_alt:
          type: string
        id:
          format: uuid
          type: string
        cert:
          type: string
        created_at:
          format: int32
          type: integer
        tags:
          type: array
        key_alt:
          type: string
        key:
          type: string
    workspaces:
      required:
      - name
      type: object
      properties:
        id:
          format: uuid
          type: string
        comment:
          type: string
        created_at:
          format: int32
          type: integer
        meta:
          type: array
        config:
          type: array
        name:
          type: string
    snis:
      required:
      - name
      - certificate
      type: object
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        created_at:
          format: int32
          type: integer
        certificate:
          $ref: '#/components/schemas/certificates'
        tags:
          type: array
    upstreams:
      required:
      - name
      type: object
      properties:
        algorithm:
          default: round-robin
          type: string
        healthchecks:
          default:
            active:
              type: http
              timeout: 1
              healthy:
                http_statuses:
                - 200
                - 302
                interval: 0
                successes: 0
              unhealthy:
                interval: 0
                http_statuses:
                - 429
                - 404
                - 500
                - 501
                - 502
                - 503
                - 504
                - 505
                tcp_failures: 0
                timeouts: 0
                http_failures: 0
              https_verify_certificate: true
              concurrency: 10
              http_path: /
            passive:
              unhealthy:
                http_statuses:
                - 429
                - 500
                - 503
                tcp_failures: 0
                timeouts: 0
                http_failures: 0
              type: http
              healthy:
                successes: 0
                http_statuses:
                - 200
                - 201
                - 202
                - 203
                - 204
                - 205
                - 206
                - 207
                - 208
                - 226
                - 300
                - 301
                - 302
                - 303
                - 304
                - 305
                - 306
                - 307
                - 308
          type: array
        name:
          type: string
        created_at:
          format: int32
          type: integer
        hash_fallback:
          default: none
          type: string
        client_certificate:
          $ref: '#/components/schemas/certificates'
        hash_on_header:
          type: string
        host_header:
          type: string
        hash_fallback_header:
          type: string
        id:
          format: uuid
          type: string
        hash_on_cookie:
          type: string
        tags:
          type: array
        hash_on_cookie_path:
          default: /
          type: string
        hash_on:
          default: none
          type: string
        slots:
          default: 10000
          type: integer
    targets:
      required:
      - upstream
      - target
      type: object
      properties:
        id:
          format: uuid
          type: string
        upstream:
          $ref: '#/components/schemas/upstreams'
        created_at:
          format: float
          type: number
        tags:
          type: array
        target:
          type: string
        weight:
          default: 100
          type: integer
    clustering_data_planes:
      required:
      - id
      - ip
      - hostname
      - sync_status
      type: object
      properties:
        sync_status:
          default: unknown
          type: string
        id:
          type: string
        version:
          type: string
        last_seen:
          format: int32
          type: integer
        config_hash:
          type: string
        ip:
          type: string
        hostname:
          type: string
    tags:
      required:
      - tag
      - entity_name
      - entity_id
      type: object
      properties:
        tag:
          type: string
        entity_name:
          type: string
        entity_id:
          type: string
    parameters:
      required:
      - key
      - value
      type: object
      properties:
        created_at:
          format: int32
          type: integer
        key:
          type: string
        value:
          type: string
    ca_certificates:
      required:
      - cert
      type: object
      properties:
        id:
          format: uuid
          type: string
        cert_digest:
          type: string
        created_at:
          format: int32
          type: integer
        tags:
          type: array
        cert:
          type: string
    services:
      required:
      - protocol
      - host
      - port
      type: object
      properties:
        path:
          type: string
        name:
          type: string
        host:
          type: string
        write_timeout:
          default: 60000
          type: integer
        read_timeout:
          default: 60000
          type: integer
        client_certificate:
          $ref: '#/components/schemas/certificates'
        id:
          format: uuid
          type: string
        tls_verify:
          type: boolean
        tags:
          type: array
        tls_verify_depth:
          default: ~
          nullable: true
          type: integer
        created_at:
          format: int32
          type: integer
        updated_at:
          format: int32
          type: integer
        protocol:
          default: http
          type: string
        ca_certificates:
          type: array
        connect_timeout:
          default: 60000
          type: integer
        port:
          default: 80
          type: integer
        retries:
          default: 5
          type: integer
openapi: 3.1.0
paths:
  /targets/{targets}: []
  /targets/{targets}/upstream: []
  /:
    get:
      summary: Retrieve node information
  /routes/{routes}/plugins:
    post:
      summary: This method is not available when using DB-less mode.
  /cache/{key}:
    delete:
      summary: This method is not available when using DB-less mode.
    get: []
  /clustering/data-planes: []
  /clustering/status: []
  /schemas/{db_entity_name}/validate:
    post:
      summary: This method is not available when using DB-less mode. Validate a configuration
        against a schema
  /schemas/{name}:
    get:
      summary: Retrieve Entity Schema
  /routes/{routes}/plugins/{plugins}:
    patch:
      summary: This method is not available when using DB-less mode.
  /services/{services}/plugins/{plugins}:
    patch:
      summary: This method is not available when using DB-less mode.
  /config:
    post:
      summary: This method is only available when using DB-less mode.
    get:
      summary: This method is only available when using DB-less mode.
  /schemas/plugins/{name}:
    get:
      summary: Retrieve Plugin Schema
  /upstreams/{upstreams}/targets/{targets}:
    delete:
      summary: This method is not available when using DB-less mode. Delete Target
    patch:
      summary: This method is not available when using DB-less mode. Update Target
    get: []
    put:
      summary: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets:
    post:
      summary: This method is not available when using DB-less mode.
    get: []
  /plugins/schema/{name}:
    get: []
  /consumers/{consumers}/plugins/{plugins}:
    patch:
      summary: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/{address}/unhealthy:
    post:
      summary: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/all:
    get:
      summary: List all Targets
  /consumers/{consumers}/plugins:
    post:
      summary: This method is not available when using DB-less mode.
  /plugins/enabled:
    get:
      summary: Retrieve Enabled Plugins
  /snis/{snis}/certificate: []
  /upstreams/{upstreams}/targets/{targets}/healthy:
    post:
      summary: This method is not available when using DB-less mode.
  /endpoints:
    get:
      summary: List available endpoints
  /upstreams/{upstreams}/health:
    get:
      summary: Show Upstream health for node
  /certificates/{certificates}:
    patch:
      summary: This method is not available when using DB-less mode.
    get: []
    put:
      summary: This method is not available when using DB-less mode.
  /cache:
    delete:
      summary: This method is not available when using DB-less mode.
  /consumers:
    get: []
  /upstreams/{upstreams}/targets/{targets}/unhealthy:
    post:
      summary: This method is not available when using DB-less mode.
  /tags/{tags}:
    get:
      summary: ' List entity IDs by tag '
  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:
    post:
      summary: This method is not available when using DB-less mode.
  /plugins/{plugins}:
    patch:
      summary: This method is not available when using DB-less mode.
  /certificates/{certificates}/snis: []
  /certificates/{certificates}/snis/{snis}: []
  /targets: []
  /schemas/plugins/validate:
    post:
      summary: This method is not available when using DB-less mode. Validate a plugin
        configuration against the schema
  /services/{services}/plugins:
    post:
      summary: This method is not available when using DB-less mode.
  /plugins:
    post:
      summary: This method is not available when using DB-less mode.
  /status:
    get:
      summary: Retrieve node status
info:
  summary: Kong RESTful Admin API for administration purposes.
  description: "        \n\n        Kong comes with an **internal** RESTful Admin
    API for administration purposes.\n        Requests to the Admin API can be sent
    to any node in the cluster, and Kong will\n        keep the configuration consistent
    across all nodes.\n\n        - `8001` is the default port on which the Admin API
    listens.\n        - `8444` is the default port for HTTPS traffic to the Admin
    API.\n\n        This API is designed for internal use and provides full control
    over Kong, so\n        care should be taken when setting up Kong environments
    to avoid undue public\n        exposure of this API. See [this document][secure-admin-api]
    for a discussion\n        of methods to secure the Admin API.\n      "
  version: 2.4.1
  license:
    url: https://github.com/Kong/kong/blob/master/LICENSE
    name: Apache 2.0
  title: Kong Admin API
  contact:
    url: https://github.com/Kong/kong
    name: Kong

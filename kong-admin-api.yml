servers:
- url: http://localhost:8001
  description: 8001 is the default port on which the Admin API listens.
- url: https://localhost:8444
  description: 8444 is the default port for HTTPS traffic to the Admin API.
paths:
  /upstreams/{upstreams}/targets:
    post:
      description: This method is not available when using DB-less mode.
    get: []
  /endpoints:
    get:
      summary: List available endpoints
  /schemas/{name}:
    get:
      summary: Retrieve Entity Schema
  /targets/:targets/upstream: []
  /schemas/plugins/validate:
    post:
      summary: Validate a plugin configuration against the schema
      description: This method is not available when using DB-less mode.
  /certificates/{certificates}/snis: []
  /schemas/plugins/{name}:
    get:
      summary: Retrieve Plugin Schema
  /timers:
    get:
      summary: Retrieve runtime debugging info of Kong's timers
  /upstreams/{upstreams}/targets/{targets}/healthy:
    put:
      description: This method is not available when using DB-less mode.
  /cache/{key}:
    delete:
      description: This method is not available when using DB-less mode.
    get: []
  /consumers/{consumers}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /routes/:routes/plugins/:plugins:
    patch: []
  /status:
    get:
      summary: Retrieve node status
  /schemas/{db_entity_name}/validate:
    post:
      summary: Validate a configuration against a schema
      description: This method is not available when using DB-less mode.
  /certificates/:certificates/snis/:snis: []
  /routes/{routes}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /snis/{snis}/certificate: []
  /certificates/{certificates}:
    put:
      description: This method is not available when using DB-less mode.
    get: []
    patch:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:
    put:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/{address}/unhealthy:
    put:
      description: This method is not available when using DB-less mode.
  /consumers:
    get: []
  /tags/{tags}:
    get:
      summary: ' List entity IDs by tag '
  /clustering/data-planes: []
  /plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/health:
    get:
      summary: Show Upstream health for node
  /plugins:
    post:
      description: This method is not available when using DB-less mode.
  /plugins/schema/{name}:
    get: []
  /upstreams/{upstreams}/targets/{targets}/unhealthy:
    put:
      description: This method is not available when using DB-less mode.
  /config:
    post:
      description: This method is only available when using DB-less mode.
    get:
      description: This method is only available when using DB-less mode.
  /upstreams/{upstreams}/targets/all:
    get:
      summary: List all Targets
  /services/{services}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /plugins/enabled:
    get:
      summary: Retrieve Enabled Plugins
  /upstreams/{upstreams}/targets/{targets}:
    put:
      description: This method is not available when using DB-less mode.
    get: []
    delete:
      summary: Delete Target
      description: This method is not available when using DB-less mode.
    patch:
      summary: Update Target
      description: This method is not available when using DB-less mode.
  /:
    get:
      summary: Retrieve node information
  /consumers/{consumers}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /clustering/status: []
  /services/{services}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /cache:
    delete:
      description: This method is not available when using DB-less mode.
  /targets: []
  /targets/{targets}: []
openapi: 3.1.0
components:
  schemas:
    upstreams:
      type: object
      required:
      - name
      properties:
        hash_on_query_arg:
          type: string
        client_certificate:
          $ref: '#/components/schemas/certificates'
        hash_fallback_query_arg:
          type: string
        name:
          type: string
        hash_fallback_uri_capture:
          type: string
        host_header:
          type: string
        created_at:
          type: integer
          format: int32
        tags:
          type: array
        slots:
          type: integer
          default: 10000
        algorithm:
          type: string
          default: round-robin
        hash_on:
          type: string
          default: none
        hash_fallback:
          type: string
          default: none
        healthchecks:
          type: array
          default:
            active:
              timeout: 1
              http_path: /
              type: http
              unhealthy:
                http_statuses:
                - 429
                - 404
                - 500
                - 501
                - 502
                - 503
                - 504
                - 505
                tcp_failures: 0
                timeouts: 0
                http_failures: 0
                interval: 0
              concurrency: 10
              https_verify_certificate: true
              healthy:
                successes: 0
                interval: 0
                http_statuses:
                - 200
                - 302
            passive:
              type: http
              unhealthy:
                timeouts: 0
                http_failures: 0
                http_statuses:
                - 429
                - 500
                - 503
                tcp_failures: 0
              healthy:
                http_statuses:
                - 200
                - 201
                - 202
                - 203
                - 204
                - 205
                - 206
                - 207
                - 208
                - 226
                - 300
                - 301
                - 302
                - 303
                - 304
                - 305
                - 306
                - 307
                - 308
                successes: 0
        hash_fallback_header:
          type: string
        hash_on_header:
          type: string
        hash_on_cookie:
          type: string
        id:
          type: string
          format: uuid
        hash_on_cookie_path:
          type: string
          default: /
        hash_on_uri_capture:
          type: string
    targets:
      type: object
      required:
      - upstream
      - target
      properties:
        weight:
          type: integer
          default: 100
        id:
          type: string
          format: uuid
        created_at:
          type: number
          format: float
        upstream:
          $ref: '#/components/schemas/upstreams'
        target:
          type: string
        tags:
          type: array
    vaults:
      type: object
      required:
      - prefix
      - name
      properties:
        tags:
          type: array
        updated_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        description:
          type: string
        name:
          type: string
        prefix:
          type: string
        created_at:
          type: integer
          format: int32
        config:
          type: array
    snis:
      type: object
      required:
      - name
      - certificate
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        tags:
          type: array
        certificate:
          $ref: '#/components/schemas/certificates'
        created_at:
          type: integer
          format: int32
    services:
      type: object
      required:
      - protocol
      - host
      - port
      - enabled
      properties:
        client_certificate:
          $ref: '#/components/schemas/certificates'
        tls_verify:
          type: boolean
        name:
          type: string
        tls_verify_depth:
          type: integer
          default: ~
          nullable: true
        port:
          type: integer
          default: 80
        enabled:
          type: boolean
          default: true
        path:
          type: string
        created_at:
          type: integer
          format: int32
        tags:
          type: array
        ca_certificates:
          type: array
        protocol:
          type: string
          default: http
        id:
          type: string
          format: uuid
        retries:
          type: integer
          default: 5
        connect_timeout:
          type: integer
          default: 60000
        updated_at:
          type: integer
          format: int32
        write_timeout:
          type: integer
          default: 60000
        host:
          type: string
        read_timeout:
          type: integer
          default: 60000
    routes:
      type: object
      required:
      - protocols
      - https_redirect_status_code
      - strip_path
      - preserve_host
      - request_buffering
      - response_buffering
      properties:
        name:
          type: string
        headers:
          type: array
        created_at:
          type: integer
          format: int32
        updated_at:
          type: integer
          format: int32
        destinations:
          type: array
        snis:
          type: array
        hosts:
          type: array
        id:
          type: string
          format: uuid
        paths: []
        protocols:
          type: array
          default:
          - http
          - https
        path_handling:
          type: string
          default: v0
        sources:
          type: array
        preserve_host:
          type: boolean
          default: false
        methods:
          type: array
        request_buffering:
          type: boolean
          default: true
        tags:
          type: array
        response_buffering:
          type: boolean
          default: true
        regex_priority:
          type: integer
          default: 0
        service:
          $ref: '#/components/schemas/services'
        strip_path:
          type: boolean
          default: true
        https_redirect_status_code:
          type: integer
          default: 426
    certificates:
      type: object
      required:
      - cert
      - key
      properties:
        key:
          type: string
        key_alt:
          type: string
        id:
          type: string
          format: uuid
        created_at:
          type: integer
          format: int32
        tags:
          type: array
        cert:
          type: string
        cert_alt:
          type: string
    clustering_data_planes:
      type: object
      required:
      - id
      - ip
      - hostname
      - sync_status
      properties:
        sync_status:
          type: string
          default: unknown
        version:
          type: string
        id:
          type: string
        hostname:
          type: string
        ip:
          type: string
        last_seen:
          type: integer
          format: int32
        config_hash:
          type: string
    parameters:
      type: object
      required:
      - key
      - value
      properties:
        created_at:
          type: integer
          format: int32
        key:
          type: string
        value:
          type: string
    consumers:
      type: object
      required: []
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        created_at:
          type: integer
          format: int32
        tags:
          type: array
        custom_id:
          type: string
    plugins:
      type: object
      required:
      - name
      - protocols
      - enabled
      properties:
        route:
          $ref: '#/components/schemas/routes'
          default: ~
          nullable: true
        id:
          type: string
          format: uuid
        protocols:
          type: array
          enum:
          - http
          - https
          - tcp
          - tls
          - udp
          - grpc
          - grpcs
          default:
          - grpc
          - grpcs
          - http
          - https
        consumer:
          $ref: '#/components/schemas/consumers'
          default: ~
          nullable: true
        enabled:
          type: boolean
          default: true
        tags:
          type: array
        config:
          type: array
        service:
          $ref: '#/components/schemas/services'
          default: ~
          nullable: true
        created_at:
          type: integer
          format: int32
        name:
          type: string
    tags:
      type: object
      required:
      - tag
      - entity_name
      - entity_id
      properties:
        tag:
          type: string
        entity_name:
          type: string
        entity_id:
          type: string
    ca_certificates:
      type: object
      required:
      - cert
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: integer
          format: int32
        tags:
          type: array
        cert:
          type: string
        cert_digest:
          type: string
    workspaces:
      type: object
      required:
      - name
      properties:
        id:
          type: string
          format: uuid
        config:
          type: array
        name:
          type: string
        meta:
          type: array
        comment:
          type: string
        created_at:
          type: integer
          format: int32
info:
  version: 3.0.0
  description: "       {{site.base_gateway}} comes with an **internal** RESTful Admin
    API for administration purposes.\n        Requests to the Admin API can be sent
    to any node in the cluster, and Kong will\n        keep the configuration consistent
    across all nodes.\n\n        - `8001` is the default port on which the Admin API
    listens.\n        - `8444` is the default port for HTTPS traffic to the Admin
    API.\n\n        This API is designed for internal use and provides full control
    over Kong, so\n        care should be taken when setting up Kong environments
    to avoid undue public\n        exposure of this API. See [this document][secure-admin-api]
    for a discussion\n        of methods to secure the Admin API.\n      "
  license:
    name: Apache 2.0
    url: https://github.com/Kong/kong/blob/master/LICENSE
  contact:
    name: Kong
    url: https://github.com/Kong/kong
  summary: Kong RESTful Admin API for administration purposes.
  title: Kong Admin API

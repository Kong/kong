#!/usr/bin/env resty
setmetatable(_G, nil)

local usage = [[
  Usage:

  scripts/changelog-helper <tag_from> <tag_to> <token>

  Example:

  scripts/changelog-helper 2.4.1 master $GITHUB_TOKEN

  For the Github token, visit https://github.com/settings/tokens . It only needs "repo" scopes, without security_events.

  ** NOTE: Github limits the number of commits to compare to 250. If the diff is bigger, you will get less commits than you should **
]]

local cjson = require "cjson"
local http = require "resty.http"

local fmt = string.format

local github_api = {}
local github_api_mt = {}
github_api_mt.__index = github_api_mt

github_api.new = function(github_token)
  return setmetatable({ github_token = github_token }, github_api_mt)
end

function github_api_mt:get(path)
  local httpc = assert(http.new())
  httpc:set_timeout(10000)

  local res = assert(httpc:request_uri(
    fmt("https://api.github.com%s", path), {
      method = "GET",
      ssl_verify = false,
      headers = {
        ["Authorization"] = fmt("token %s", self.github_token),
        ["Accept"] = "application/vnd.github.groot-preview+json", -- needed to get prs associated to sha
        ["Content-Type"] = "application/json",
      }
    }
  ))

  return cjson.decode(res.body)
end


-----------------------

local tag_from, tag_to, github_token = arg[1], arg[2], arg[3]

if not tag_from or not tag_to or not github_token then
  print(usage)
  os.exit(0)
end

local api = github_api.new(github_token)

print("Getting main comparison")
local compare_res = api:get(fmt("/repos/kong/kong/compare/%s...%s", tag_from, tag_to))

if #compare_res.commits >= 250 then
  error("250 commits found on compare. Github only shows 250 on its compare query, so this likely is missing data")
end

local authors = {}
local prs = {}

print("\n\nGetting PRs associated with commits")
local prs_res, pr, last_pr_number
for i, commit in ipairs(compare_res.commits) do
  prs_res = api:get(fmt("/repos/kong/kong/commits/%s/pulls", commit.sha))
  pr = prs_res[1] -- FIXME perhaps find a more appropiate one using tag_to ?

  if type(pr) == "table" then
    prs[pr.number] = pr
    pr.commits = pr.commits or {}
    pr.commits[#pr.commits + 1] = commit
    if last_pr_number ~= pr.number then
      io.stdout:write(" #", pr.number)
    else
      io.stdout:write(".")
    end
    io.stdout:flush()
    last_pr_number = pr.number
  end

  if type(commit.author) == "table" then -- can be null
    authors[commit.author.login] = commit.author
  end
end

print("\n\nGetting author info")
local is_kong_author_res
for login,author in pairs(authors) do
  is_kong_author_res = api:get(fmt("/orgs/kong/members/%s", login))
  print(require("inspect")(is_kong_author_res))
end


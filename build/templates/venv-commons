
test -z "$KONG_VENV" && exit 1

# use env vars to let Fish shell happy, we will unset them later
export ROCKS_CONFIG="$KONG_VENV/rocks_config"
export ROCKS_ROOT="$KONG_VENV"

chmod -R a+rw "$KONG_VENV"

mkdir -p "$KONG_VENV/venv/bin"

echo "#!/bin/bash
$KONG_VENV/openresty/bin/resty -I $KONG_VENV/openresty/site/lualib -I $KONG_VENV/openresty/lualib --nginx $KONG_VENV/openresty/nginx/sbin/nginx \"\$@\"
" > "$KONG_VENV/venv/bin/resty"
chmod +x "$KONG_VENV/venv/bin/resty"

export PATH="$KONG_VENV/venv/bin:$KONG_VENV/openresty/bin:$KONG_VENV/openresty/nginx/sbin:$KONG_VENV/openresty/luajit/bin:$KONG_VENV/luarocks/bin:$KONG_VENV/bin:$workspace_path/bin:$PATH"

echo "
rocks_trees = {
    { name = [[system]], root = [[$ROCKS_ROOT]] }
}
" > "$ROCKS_CONFIG"

export LUAROCKS_CONFIG="$ROCKS_CONFIG"

# duplicate package.[c]path even though we have set in resty-cli, so luajit and kong can consume
export LUA_PATH="./?.lua;./?/init.lua;$KONG_VENV/openresty/site/lualib/?.ljbc;$KONG_VENV/openresty/site/lualib/?/init.ljbc;$KONG_VENV/openresty/lualib/?.ljbc;$KONG_VENV/openresty/lualib/?/init.ljbc;$KONG_VENV/openresty/site/lualib/?.lua;$KONG_VENV/openresty/site/lualib/?/init.lua;$KONG_VENV/openresty/lualib/?.lua;$KONG_VENV/openresty/lualib/?/init.lua;$KONG_VENV/openresty/luajit/share/luajit-2.1.0-beta3/?.lua;$ROCKS_ROOT/share/lua/5.1/?.ljbc;$ROCKS_ROOT/share/lua/5.1/?/init.ljbc;$ROCKS_ROOT/share/lua/5.1/?.lua;$ROCKS_ROOT/share/lua/5.1/?/init.lua;;"

export LUA_CPATH="$KONG_VENV/openresty/site/lualib/?.so;$KONG_VENV/openresty/lualib/?.so;./?.so;$KONG_VENV/lib/lua/5.1/?.so;$KONG_VENV/openresty/luajit/lib/lua/5.1/?.so;$ROCKS_ROOT/lib/lua/5.1/?.so;;"
export KONG_PREFIX="$KONG_VENV/kong/servroot"
export LIBRARY_PREFIX="$KONG_VENV/kong" # let "make dev" happy
export OPENSSL_DIR="$KONG_VENV/kong" # let "make dev" happy
